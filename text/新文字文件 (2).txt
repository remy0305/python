python3 -v
pip -v
檢視有無環境
repit
colab
沒有環境也能用
附檔名是否.py
用python3+腳本名稱就能在ｌｉｕｎｘ執行

復數
ｐｙｔｈｏｎ沒有字元

ｐｒｉｃｅ＝２０　
輸出ｆ＂｛ｐｒｉｃｅ｝ｄｏｌｌａｒｓ＂

ｂｏｏｌ　Ｔｕｒｎ　ａｎｄ　Ｆａｌｓｅ

集合　無順序　可變動的資料容器　重複資料會只保留一個

列表　有順序　可變動的資料容器

數組　有順序　不可變動的資料容器

沒有＋＋和－－

條件＝＝　！＝　
ｉｓ　　ｎｏｔ　多用在集合　列表　數組

ｐｒｉｎｔ（ｔｙｐｅ（））　可以顯示變數的資料型態
ｈｅｌｐ（）了解同個資料型態有哪些變數　可以檢查　有沒有０變Ｏ

ｐｙ　ｆｏｒ　ｉ　ｉｎ　ｒａｎｇｅ（１０）
　　　　　　　ｐｒｉｎｔ﹙ｉ﹚　
ｃ　ｆｏｒ（ａ＝１　，ａ＝１０，ａ＋＋）
	ｐｒｉｎｔｆ（ａ）

ｄｅｆ　ｆｏｏ（）：
ｐｒｉｎｔ（＂＜３＂）

ｋｈｅｏｋｏｅｈ

ｄｅｆ　ｆｏｏ（）；
　　　　ｒｅｔｕｒｎ　＂＜３＂

弱型別　可以　ａ＝　１
	　　ａ＝ｅｇｇ

ｐｏｗｅｒ＝　１
ａｓｓｅｒｔ　（ｐｏｗｅｒ＝＝１），＂機器未開機＂

ｔｒｙ　ｅｘｃｅｐｔ　
　ｔｒｙ：
　　　ｐ－１
　ｅｘｃｅｐｔ　ｅｘｃｅｐｔｉｏｎ　ａｓ　ａｐｐｌｅ
　　　ｐｒｉｎｔ　（ａｐｐｌｅ）
當你要別人輸入數字但使用者沒這麼做可以這樣避免他跳掉

型別標記
　Ｘ：ｓｔｒ＝　＂ｈｅｌｌｏ　ｗｏｒｌｄ＂
不　影響輸出但方便觀看程式碼
　ｄｅｆ　ｆｏｏｌ（）　－＞ｉｎｔ：

ｎｅｒｆ　ｆｏｎｔ　ｆｉｒｄ　ｃｏｄｅ

跟上面一樣

文字判斷　
　ｕｐｐｅｒ（）　＆ｌｏｗｅｒ（）　自動大小寫轉換

ａ＝　＂ａＰｐｌＥ＂
ｉｆ　ａ．ｕｐｐｅｒ（）＝＂ＡＰＰＬＥ＂

ｃｏｎｔａｉｎｓ

ｉｎ

拆解字串
把字用　ｌｉｓｔ儲存
ｓｐｌｉｔ（）

｛變數［１：］｝變成只會顯示第一個字
換成：１　則相反

ｌｅｎ

ｆｏｒ　ｓｏｍｅｔｈｉｎｇ　ｉｎ　ｓｅｔ：

ｃｐｐ　ＦＩＬＥ　ｖａｒ　＝ｏｐｅｎ（＂．．．＂）

ｔｒｅｅ　＝　ｏｐｅｎ（＂．／ｆｉｌｅ＂，　ｍｏｄｅ＝＂ｒ＂））

ｔｒｅｅ．ｃｌｏｓｅ（）


Ｒ－ｒａｗ　ｓｔｒｉｎｇ　跳脫字元
ｂｙｔｅ　ｓｔｒｉｎｔ　

開檔２　ｗｉｔｈ　ｏｐｅｎ（檔案位置）ａｓ　ｉ：　不用特別寫ｖａｒ　＝ｏｐｅｎ（）

ｉｍｐｏｒｔ　ｆｏｒｍｉｍｐｏｒｔ

ｏｓ　與ｓｈｅｌｌ溝通



腳本判斷＿ｎａｍｅ＿


ｖｉｒｔｕａｌｅｎｖ　分開專案環境

regular

re

